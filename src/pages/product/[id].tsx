import { useState } from 'react';
import { useRouter } from 'next/router';
import { FormikContext, useFormik } from 'formik';
import * as yup from 'yup';
import Image from 'next/legacy/image';

import { OrderForm, ProductOptionCard } from '@/components';
import { ComponentContainer, MainLayout } from '@/layouts';
import { DiscountLabel, Icon, IconButton, Modal, Rate } from '@/legos';

import productImage21 from '../../assets/rectangle-21.png';
import productImage from '../../assets/rectangle-25.png';
import review from '../../assets/review.png';
import { ProductCharacteristicItem } from '@/components/ProductDescriptionItem';
import { OrderUserFields, colorOptions, modelOptions } from '@/components/OrderForm';
import { AddProductForm } from '@/components/AddProductForm';
import { AddProductFields } from '@/components/AddProductForm/types';

const CHARACTERISTICS = [
  {
    title: '–ú–∞—Ç–µ—Ä—ñ–∞–ª',
    text: '–ü–ª–∞—Å—Ç–∏–∫',
  },
  {
    title: '–ú–∞—Ç–µ—Ä—ñ–∞–ª',
    text: '–ü–ª–∞—Å—Ç–∏–∫',
  },
  {
    title: '–ú–∞—Ç–µ—Ä—ñ–∞–ª',
    text: '–ü–ª–∞—Å—Ç–∏–∫',
  },
  {
    title: '–ú–∞—Ç–µ—Ä—ñ–∞–ª',
    text: '–ü–ª–∞—Å—Ç–∏–∫',
  },
];

export default function Product() {
  const { query } = useRouter();
  const [isOpen, setIsOpen] = useState(false);

  // const initialValues = {
  //   [OrderUserFields.Quantity]: 1,
  //   [OrderUserFields.Name]: '',
  //   [OrderUserFields.Phone]: '',
  //   [OrderUserFields.Color]: colorOptions[0].value ?? '',
  //   [OrderUserFields.Model]: modelOptions[0].value ?? '',
  // };

  const initialValues = {
    [AddProductFields.Title]: '',
    [AddProductFields.Description]: '',
    [AddProductFields.Discount]: 40,
    [AddProductFields.Price]: 0,
  };

  const phoneRegExp = /^(\+380|0)\s?\d{2}\s?\d{3}\s?\d{2}\s?\d{2}$/;
  const validationSchema = yup.object({
    [OrderUserFields.Name]: yup.string().required('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –¥–∞–Ω–µ –ø–æ–ª–µ'),
    [OrderUserFields.Phone]: yup
      .string()
      .required('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –¥–∞–Ω–µ –ø–æ–ª–µ')
      .matches(phoneRegExp, '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–æ —Ç–µ–ª–µ—Ñ–æ–Ω'),
  });

  const formik = useFormik({
    initialValues,
    // validationSchema,
    onSubmit: values => {
      console.log(values);
    },
  });

  const toggleModal = () => {
    formik.resetForm();
    setIsOpen(open => !open);
  };

  return (
    <MainLayout>
      <ComponentContainer>
        <section className="relative grid md:grid-cols-2 gap-11 items-center mt-4 md:mt-20 before:w-[400px] before:h-[400px] before:absolute before:-top-20 before:-left-44 before:bg-radial-gradient-purple before:opacity-10 before:-z-10 after:w-[400px] after:h-[400px] after:absolute after:-bottom-20 after:-right-44 after:bg-radial-gradient-purple after:opacity-10 after:-z-10">
          <div className="flex flex-col gap-4 md:gap-8">
            <h1 className="font-bold text-2xl md:text-5xl">–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞ —Å–≤—ñ—Ç–ª–æ–¥—ñ–æ–¥–Ω–∞ USB –ª–∞–º–ø–∞</h1>
            <p className="text-sm md:text-lg">
              –ó—Ä—É—á–Ω–∞ –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞ —Å–≤—ñ—Ç–ª–æ–¥—ñ–æ–¥–Ω–∞ –ª–∞–º–ø–∞ USB. –ü—ñ–¥—ñ–π–¥–µ –¥–ª—è –ø–æ—Ö–æ–¥—ñ–≤, –∫–µ–º–ø—ñ–Ω–≥—É, –Ω–∞–º–µ—Ç—ñ–≤,
              –ø–æ–¥–æ—Ä–æ–∂–µ–π, —Ä–æ–±–æ—Ç–∏ –∑ –±–ª–æ–∫–Ω–æ—Ç–æ–º. –ñ–∏–≤–ª–µ–Ω–Ω—è –∑–¥—ñ–π—Å–Ω—é—î—Ç—å—Å—è –≤—ñ–¥ power bank.
            </p>
            <div className="flex relative md:hidden">
              <div className="absolute right-2 sm:right-6 top-2 sm:top-6 z-10">
                <DiscountLabel discount={40} />
              </div>
              <Image src={productImage} alt="Product photo" />
            </div>
            <div className="flex justify-between items-center">
              <div className="flex items-baseline gap-2">
                <p className="text-[#F6543E] font-bold text-4xl">
                  üî• {`${270 * (1 - 40 / 100)} –≥—Ä–Ω`}
                </p>
                <p className="text-[#828282] line-through">270 –≥—Ä–Ω</p>
              </div>
              <Rate rate={4.8} />
            </div>
            <div className="font-bold text-sm md:text-2xl">
              <p className="mb-4">–î–æ –∫—ñ–Ω—Ü—è –∞–∫—Ü—ñ—ó:</p>
              <ul className="grid grid-cols-3 rounded-md p-4 bg-[#F4F3FD]">
                <li className="flex flex-col items-center relative after:content-[':'] after:absolute after:-right-1">
                  <span>22</span>
                  <span>–≥–æ–¥–∏–Ω</span>
                </li>
                <li className="flex flex-col items-center relative after:content-[':'] after:absolute after:-right-1">
                  <span>16</span>
                  <span>—Ö–≤–∏–ª–∏–Ω</span>
                </li>
                <li className="flex flex-col items-center">
                  <span>22</span>
                  <span>—Å–µ–∫—É–Ω–¥</span>
                </li>
              </ul>
            </div>
            <button
              onClick={toggleModal}
              className="flex justify-center items-center rounded-full bg-[#7613B5] text-white text-base font-semibold p-4 w-full md:w-80"
            >
              –ó–∞–º–æ–≤–∏—Ç–∏ –∑–∞—Ä–∞–∑
            </button>
          </div>
          <div className="hidden relative md:flex overflow-hidden rounded-2xl">
            <DiscountLabel discount={40} />
            <Image src={productImage} alt="Product photo" />
          </div>
        </section>

        <section className="grid md:grid-cols-2 gap-8 mt-8 md:gap-11 md:mt-20">
          <div className="rounded-2xl p-6 sm:p-8 bg-[#F4F3FD]">
            <h2 className="font-bold text-2xl md:text-5xl">–î–æ–∫–ª–∞–¥–Ω–∏–π –æ–ø–∏—Å</h2>
            <dl className="mt-4 sm:mt-7">
              {CHARACTERISTICS.map((item, index) =>
                item?.title ? (
                  <ProductCharacteristicItem
                    key={`${item.title}-${index}`}
                    title={item.title}
                    text={item.text}
                  />
                ) : null,
              )}
            </dl>
          </div>
          <Image src={productImage} alt="Product photo" />
        </section>

        <button
          onClick={toggleModal}
          className="flex justify-center items-center rounded-full bg-[#7613B5] text-white text-base font-semibold p-4 w-full mt-8 md:w-80 md:hidden"
        >
          –ó–∞–º–æ–≤–∏—Ç–∏ –∑–∞—Ä–∞–∑
        </button>

        <section className="mt-8 md:mt-12">
          <h2 className="font-bold text-2xl md:text-5xl">–í–∞—Ä—ñ–∞–Ω—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è</h2>
          <div className="grid md:grid-cols-2 gap-8 mt-8 md:gap-11 md:mt-10">
            <ProductOptionCard
              title="–í–∏–º–∫–Ω–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞"
              text="–°–≤—ñ—Ç–ª–æ–¥—ñ–æ–¥–Ω–∞ –ª–∞–º–ø–∞ –≤–∏–ø—Ä–æ–º—ñ–Ω—é—î —è—Å–∫—Ä–∞–≤–µ —Å–≤—ñ—Ç–ª–æ, —Ç–æ–º—É —ó—ó –∑—Ä—É—á–Ω–æ
                  –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –ø—ñ–¥ —á–∞—Å –≤–∏–∫–ª—é—á–µ–Ω—å –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—ó."
              src={productImage21}
            />
            <ProductOptionCard
              title="–ö–µ–º–ø—ñ–Ω–≥"
              text="–û—Å–∫—ñ–ª—å–∫–∏ –ª–∞–º–ø–∞ –º–∞—î –º–∞–ª—ñ –≥–∞–±–∞—Ä–∏—Ç–∏, –Ω–µ—é –±–µ–∑ –ø—Ä–æ–±–ª–µ–º –º–æ–∂–Ω–∞ –æ—Å–≤—Ç–ª—é–≤–∞—Ç–∏ –≤ –ø–∞–ª–∞—Ç–∞—Ü—ñ."
              src={productImage21}
            />
            <ProductOptionCard
              title="–ü–æ–¥–æ—Ä–æ–∂—ñ"
              text="Led –ª–∞–º–ø–∞ –º–∞—î –Ω–∏–∑—å–∫–µ –µ–Ω–µ—Ä–≥–æ—Å–ø–æ–∂–∏–≤–∞–Ω–Ω—è —Ç–∞ –ø—Ä–∞—Ü—é—î –≤—ñ–¥ power bank, —Ç–æ–º—É —ó—ó –∑—Ä—É—á–Ω–æ –±—Ä–∞—Ç–∏ –≤ –ø–æ–¥–æ—Ä–æ–∂—ñ."
              src={productImage21}
            />
            <ProductOptionCard
              title="–í–∏–º–∫–Ω–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞"
              text="–°–≤—ñ—Ç–ª–æ–¥—ñ–æ–¥–Ω–∞ –ª–∞–º–ø–∞ –≤–∏–ø—Ä–æ–º—ñ–Ω—é—î —è—Å–∫—Ä–∞–≤–µ —Å–≤—ñ—Ç–ª–æ, —Ç–æ–º—É —ó—ó –∑—Ä—É—á–Ω–æ
                  –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –ø—ñ–¥ —á–∞—Å –≤–∏–∫–ª—é—á–µ–Ω—å –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—ó."
              src={productImage21}
            />
          </div>
        </section>

        <section className="mt-8 md:mt-12">
          <div className="flex flex-row gap-6 justify-between items-center">
            <h2 className="font-bold text-2xl md:text-5xl">–í—ñ–¥–≥—É–∫–∏</h2>
            <div className="flex flex-row gap-6 md:gap-10">
              <IconButton icon="ArrowCircleLeft" />
              <IconButton icon="ArrowCircleRight" />
            </div>
          </div>
          <div className="flex justify-center mt-8 md:mt-16">
            <div className="flex sm:w-2/4">
              <Image src={review} alt="Review photo" />
            </div>
          </div>
          <div className="flex flex-row flex-wrap gap-4 sm:gap-10 justify-center mt-8 md:mt-20">
            <div className="flex flex-col items-center gap-3 w-40 text-center rounded-2xl p-8 bg-[#F4F3FD]">
              <Icon icon="CalendarDate" />
              <p className="font-semibold">–î–æ—Å—Ç–∞–≤–∫–∞ 1-3 –¥–Ω—ñ</p>
            </div>
            <div className="flex flex-col items-center gap-3 w-40 text-center rounded-2xl p-8 bg-[#F4F3FD]">
              <Icon icon="CreditCardShield" />
              <p className="font-semibold">–û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω—ñ</p>
            </div>
            <div className="flex flex-col items-center gap-3 w-40 text-center rounded-2xl p-8 bg-[#F4F3FD]">
              <Icon icon="Scales" />
              <p className="font-semibold">–í–∏–≥—ñ–¥–Ω–∞ —Ü—ñ–Ω–∞</p>
            </div>
            <div className="flex flex-col items-center gap-3 w-40 text-center rounded-2xl p-8 bg-[#F4F3FD]">
              <Icon icon="ShieldTick" />
              <p className="font-semibold">–ì–∞—Ä–∞–Ω—Ç—ñ—è —è–∫–æ—Å—Ç—ñ</p>
            </div>
          </div>
        </section>

        <button
          onClick={toggleModal}
          className="flex justify-center items-center rounded-full bg-[#7613B5] text-white text-base font-semibold p-4 w-full mx-auto my-8 md:my-20 md:w-80"
        >
          –ó–∞–º–æ–≤–∏—Ç–∏ –∑–∞—Ä–∞–∑
        </button>

        <FormikContext.Provider value={formik}>
          <Modal isOpen={isOpen} toggleModal={toggleModal}>
            {/* <OrderForm /> */}
            <AddProductForm toggleModal={toggleModal} />
          </Modal>
        </FormikContext.Provider>
      </ComponentContainer>
    </MainLayout>
  );
}
